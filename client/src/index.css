@import url('https://fonts.googleapis.com/css2?family=Outfit:wght@100..900&display=swap');
@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    /* Light Mode (default) */
    --background: 255, 255, 255;
    --text: 11, 12, 16;
    --primary: 106, 13, 173;
    --accent: 90, 24, 154;
    --border: 217, 217, 217;
    
    /* Additional Colors */
    --success: 76, 175, 80;
    --warning: 255, 183, 3;
    --error: 230, 57, 70;
    --info: 33, 158, 188;
  
    /* Animation Durations */
    --animation-slow: 1000ms;
    --animation-medium: 500ms;
    --animation-fast: 300ms;

    --grid-opacity: 0.15;
  }
  
  .dark {
    /* Dark Mode */
    --background: 11, 12, 16;
    --text: 255, 255, 255;
    --primary: 106, 13, 173;
    --accent: 157, 78, 221;
    --border: 31, 27, 36;
    --grid-opacity: 0.15;
  }
  
  * {
    font-family: 'Outfit', sans-serif;
  }
  
  body {
    background-color: rgb(var(--background));
    color: rgb(var(--text));
    margin: 0;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    transition: background-color 0.3s ease, color 0.3s ease;
  }
  
  a {
    color: rgb(var(--primary));
    text-decoration: none;
    transition: color var(--animation-fast) ease;
  }
  
  a:hover {
    color: rgb(var(--accent));
  }
  
  .btn {
    background-color: rgb(var(--primary));
    color: white;
    border: none;
    padding: 0.5rem 1rem;
    border-radius: 0.25rem;
    cursor: pointer;
    transition: background-color var(--animation-fast), transform var(--animation-fast), box-shadow var(--animation-fast);
  }
  
  .btn:hover {
    background-color: rgb(var(--accent));
    transform: translateY(-2px);
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  }
  
  input, select, textarea {
    background-color: rgb(var(--background));
    color: rgb(var(--text));
    border: 1px solid rgb(var(--border));
    border-radius: 0.25rem;
    padding: 0.5rem;
    transition: border-color var(--animation-fast), box-shadow var(--animation-fast);
  }
  
  input:focus, select:focus, textarea:focus {
    border-color: rgb(var(--primary));
    outline: none;
    box-shadow: 0 0 0 2px rgba(var(--primary), 0.2);
  }
}

@layer components {
  /* You can keep your component classes here */
}

@layer utilities {
  .text-primary { color: rgb(var(--primary)); }
  .text-accent { color: rgb(var(--accent)); }
  .text-success { color: rgb(var(--success)); }
  .text-warning { color: rgb(var(--warning)); }
  .text-error { color: rgb(var(--error)); }
  .text-info { color: rgb(var(--info)); }
  
  .bg-primary { background-color: rgb(var(--primary)); }
  .bg-accent { background-color: rgb(var(--accent)); }
  .bg-success { background-color: rgb(var(--success)); }
  .bg-warning { background-color: rgb(var(--warning)); }
  .bg-error { background-color: rgb(var(--error)); }
  .bg-info { background-color: rgb(var(--info)); }
}

/* Keyframes remain the same as in your original file */
/* Animation Keyframes - outside layers since keyframes don't work in layers */
@keyframes fadeIn {
    from { opacity: 0; }
    to { opacity: 1; }
  }
  
  @keyframes slideInUp {
    from {
      transform: translateY(50px);
      opacity: 0;
    }
    to {
      transform: translateY(0);
      opacity: 1;
    }
  }
  
  @keyframes slideInLeft {
    from {
      transform: translateX(-50px);
      opacity: 0;
    }
    to {
      transform: translateX(0);
      opacity: 1;
    }
  }
  
  @keyframes slideInRight {
    from {
      transform: translateX(50px);
      opacity: 0;
    }
    to {
      transform: translateX(0);
      opacity: 1;
    }
  }
  
  @keyframes float {
    0% {
      transform: translateY(0px);
    }
    50% {
      transform: translateY(-10px);
    }
    100% {
      transform: translateY(0px);
    }
  }
  
  @keyframes glow {
    0% {
      box-shadow: 0 0 5px rgba(106, 13, 173, 0.5);
    }
    50% {
      box-shadow: 0 0 20px rgba(106, 13, 173, 0.8);
    }
    100% {
      box-shadow: 0 0 5px rgba(106, 13, 173, 0.5);
    }
  }

  /* Add to your global.css or styles file */
/* Add this to your global.css */
@layer utilities {
    /* Base Grid Structure */
    .grid-background {
      position: absolute;
      inset: 0;
      overflow: hidden;
      z-index: 0;
      pointer-events: none;
    }
  
    /* Primary Grid Lines */
    .grid-lines {
      position: absolute;
      inset: 0;
      background-size: 50px 50px;
      background-image: 
        linear-gradient(to right, rgb(var(--border)/0.15) 1px, transparent 1px),
        linear-gradient(to bottom, rgb(var(--border)/0.15) 1px, transparent 1px);
      animation: gridFloat 18s ease-in-out infinite alternate;
    }
  
    /* Dot Grid Layer */
    .grid-dots {
      position: absolute;
      inset: 0;
      background-size: 30px 30px;
      background-image: 
        radial-gradient(circle at center, rgb(var(--border)/0.2) 1px, transparent 1px);
      animation: gridDots 25s linear infinite;
    }
  
    /* Animated Blob Elements */
    .grid-blob {
      position: absolute;
      border-radius: 50%;
      filter: blur(60px);
      opacity: 0.7;
      animation: blobFloat 12s ease-in-out infinite alternate;
    }
  
    /* Subtle Noise Texture */
    .grid-noise::after {
      content: '';
      position: absolute;
      inset: 0;
      background-image: url("data:image/svg+xml,%3Csvg viewBox='0 0 200 200' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='noiseFilter'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='0.65' numOctaves='3' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23noiseFilter)' opacity='0.05'/%3E%3C/svg%3E");
      background-size: 100px 100px;
      animation: noise 2s steps(2) infinite;
    }
  
    /* Keyframes */
    @keyframes gridFloat {
      0%, 100% { transform: translate(0, 0); }
      50% { transform: translate(2%, 3%); }
    }
  
    @keyframes gridDots {
      0% { background-position: 0 0; }
      100% { background-position: 100px 100px; }
    }
  
    @keyframes blobFloat {
      0% { transform: translate(-10%, -10%) scale(1); }
      50% { transform: translate(10%, 10%) scale(1.2); }
      100% { transform: translate(-10%, -10%) scale(1); }
    }
  
    @keyframes noise {
      0% { background-position: 0 0; }
      100% { background-position: 100px 100px; }
    }
  
    /* Modern Grid Variant */
    .modern-grid {
      @apply grid-background;
    }
    .modern-grid::before {
      @apply grid-lines;
      content: '';
    }
    .modern-grid::after {
      @apply grid-dots grid-noise;
      content: '';
    }
  }